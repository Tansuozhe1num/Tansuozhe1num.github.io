<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git简单使用</title>
      <link href="/2025/03/01/git%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2025/03/01/git%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<ul><li><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><ul><li>直接 <code>git init</code>将对应目录下一个文件夹变成git仓库</li><li>使用<code>git clone</code>从github上克隆一个已经有的项目到指定文件夹<blockquote><p>检查.git文件创建成功，不能直接ls，因为ls不会显示》.git 得使用ls -a显示</p></blockquote></li></ul></li><li><h3 id="git仓库包括两种"><a href="#git仓库包括两种" class="headerlink" title="git仓库包括两种:"></a>git仓库包括两种:</h3><ul><li>本地仓库</li><li>远程仓库</li></ul></li><li><p>commit : 提交，将本地文件和版本信息保存到本地仓库</p></li><li>push: 推送，将本地仓库和版本信息提交到远程仓库</li><li>pull : 拉取，将远程仓库文件和版本信息下载到本地文件</li></ul><hr><ul><li>git GUI : 图形界面</li></ul><hr><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><blockquote><p>使用git</p></blockquote><h4 id="1-全局设置"><a href="#1-全局设置" class="headerlink" title="1. 全局设置"></a>1. 全局设置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name 你的名字</span><br><span class="line">git confih --global user.email 你的邮箱</span><br></pre></td></tr></table></figure><p>查看配置信息:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure></p><ul><li>上面设置的是git的初始化仓库，和github和gitee等的账号不一样</li></ul><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ul><li>版本库：前面看到的.git隐藏文件夹就是版本库，版本库中储存了配置信息，日志文件，版本信息等</li><li>工作区： 包含.git文件夹目录的工作区，也称为工作目录，主要用于存放代码</li><li>暂存区： .git文件夹有很多文件，其中一个index文件就是暂存区，也可以叫做stage，是一个临时保存文件的地方</li></ul><p>工作区 ——&gt; (git add) 暂存区 ——-&gt;(git commit)版本库</p><h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add 文件 //支持多个文件同时加入</span><br></pre></td></tr></table></figure></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#x27;输入提示语&#x27; 文件名字</span><br></pre></td></tr></table></figure><h3 id="工作区文件状态"><a href="#工作区文件状态" class="headerlink" title="工作区文件状态"></a>工作区文件状态</h3><blockquote><p>git文件工作区分两个状态</p></blockquote><ul><li>untracked 未跟踪(未被纳入版本库)</li><li>tracked     已被跟踪(纳入版本控制)<br>  1)Unmodified 未被修改状态<br>  2）Modified   已被修改状态<br>  3）Staged      已暂存状态<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status // 查看当前工作区的状态</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>git reset<br>1.把暂存区的东西放回工作区<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset + 文件//取消对文件的跟踪（从暂存区取消暂存，返回工作区）</span><br></pre></td></tr></table></figure>2.回退版本(通过git log 查看版本号)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 版本号</span><br></pre></td></tr></table></figure></li></ul><ul><li>git commit将暂存区的内容提交到版本库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#x27;你这一次提交的修改内容&#x27; 你要提交或者修改了的文件</span><br></pre></td></tr></table></figure></li></ul><h3 id="远程仓库操作"><a href="#远程仓库操作" class="headerlink" title="远程仓库操作"></a>远程仓库操作</h3><p><code>git remote//查看远程仓库</code><br><code>git remote -v//查看详细信息</code></p><ul><li><p>添加远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add &lt;short name&gt; &lt;url&gt; //short_name一般是origin</span><br></pre></td></tr></table></figure></li><li><p>推送：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push [remote_name] [branch_name] // 一般remote用origin代替</span><br></pre></td></tr></table></figure></li></ul><h3 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h3><ul><li>git branch 查看分支</li><li>git branch [ name ] 创建分支</li><li>git checkout [name] 切换分支</li><li>git push [short_name】[name]  推送到远程仓库</li><li>git merge [name] 合并分支(把指定代码合并到当前分支)</li><li>git branch -d [name] 删除分支</li></ul><h4 id="分支查看："><a href="#分支查看：" class="headerlink" title="分支查看："></a>分支查看：</h4><ul><li>git branch 列出所有本地分支</li><li>git branch -r 列出所有远程分支</li><li>git branch -a 列出所有本地分支和远程分支</li></ul><hr><blockquote><p>标签</p></blockquote><ul><li>git tag 列出已有的标签</li><li>git tag [name] 创建标签</li><li>git push [short_name] 【name] 将标签推送到远程仓库</li><li>git checkout -b [branch] 【name] 检出标签</li></ul><h3 id="查看最后一次使用某个文件的某人"><a href="#查看最后一次使用某个文件的某人" class="headerlink" title="查看最后一次使用某个文件的某人"></a>查看最后一次使用某个文件的某人</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log -x 文件名</span><br></pre></td></tr></table></figure><ul><li>-x是第几次</li></ul><h3 id="查看修改摩尔个文件中的collections时的提交信息"><a href="#查看修改摩尔个文件中的collections时的提交信息" class="headerlink" title="查看修改摩尔个文件中的collections时的提交信息"></a>查看修改摩尔个文件中的collections时的提交信息</h3><p>git blame , git show<br>或者使用git log</p><ul><li><code>git config</code>: Git 是一个 <a href="https://git-scm.com/docs/git-config">高度可定制的</a> 工具</li><li><code>git clone --depth=1</code>: 浅克隆（shallow clone），不包括完整的版本历史信息</li><li><code>git add -p</code>: 交互式暂存</li><li><code>git rebase -i</code>: 交互式变基</li><li><code>git blame</code>: 查看最后修改某行的人</li><li><code>git stash</code>: 暂时移除工作目录下的修改内容</li><li><code>git bisect</code>: 通过二分查找搜索历史记录</li><li><code>.gitignore</code>: <a href="https://git-scm.com/docs/gitignore">指定</a> 故意不追踪的文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2025/03/01/HTML/"/>
      <url>/2025/03/01/HTML/</url>
      
        <content type="html"><![CDATA[<blockquote><p>html 是一门制作网页的语言。</p><h2 id="1-html基本结构-骨架标签"><a href="#1-html基本结构-骨架标签" class="headerlink" title="1.html基本结构(骨架标签)"></a>1.html基本结构(骨架标签)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span>//声明html类型（html5)</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>//语言是什么</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>yrb.个人网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    我只能说教教我</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一般标签都是成对存在，称为双标签<br>但是有的单标签不用如&lt; br / &gt;</p></blockquote><ul><li><h4 id="html标签"><a href="#html标签" class="headerlink" title="html标签"></a>html标签</h4> head标签代表页面的头，，定义一些特殊的内容，这些内容往往都是“不可见的内容”（浏览器页面不可见）</li></ul><div class="table-container"><table><thead><tr><th>&lt; head &gt;</th><th>说明</th></tr></thead><tbody><tr><td>&lt; title &gt;</td><td>定义网页的标题</td></tr><tr><td>&lt; meta &gt;</td><td>定义网页的基本信息</td></tr><tr><td>&lt; style &gt;</td><td>定义CSS样式</td></tr><tr><td>&lt; link &gt;</td><td>链接外部的CSS文件或者脚本文件</td></tr><tr><td>&lt; scripe &gt;</td><td>定义脚本语言</td></tr><tr><td>&lt; base &gt;</td><td>定义所有页面的基础定位</td></tr></tbody></table></div><ul><li><h4 id="body标签"><a href="#body标签" class="headerlink" title="body标签"></a>body标签</h4><p>  body标签代表页面的身体，定义网页的内容，这些内容往往都是“可见的”，在浏览器里面</p></li><li><h3 id="标签关系："><a href="#标签关系：" class="headerlink" title="标签关系："></a>标签关系：</h3><ul><li>包含关系：</li><li>并列关系：</li></ul></li></ul><h2 id="2-段落与文字"><a href="#2-段落与文字" class="headerlink" title="2.段落与文字"></a>2.段落与文字</h2><ul><li><h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3>  段落与文字标签：</li></ul><div class="table-container"><table><thead><tr><th>标签</th><th>语义</th><th>说明</th></tr></thead><tbody><tr><td>&lt; h1&gt;~&lt; h6&gt;</td><td>header</td><td>标题</td></tr><tr><td>&lt; p&gt;</td><td>paragraph</td><td>段落</td></tr><tr><td>&lt; br&gt;</td><td>break</td><td>换行<br></td></tr><tr><td>&lt; hr&gt;</td><td>horizontal rule</td><td>水平线</td></tr><tr><td>&lt; div&gt;</td><td>division</td><td>分割元素块（块元素）</td></tr><tr><td>&lt; span&gt;</td><td>span</td><td>区域（行内元素）</td></tr></tbody></table></div><hr><blockquote><p>&lt; html  lang=”  “&gt;引号里面指名网页的语言：(定义为中文英文都可以互通)</p><ul><li>en为英语<ul><li>zh-CN为中文</li></ul></li><li>fr为法语</li></ul><p>&lt; meta charset =”UTF-8”&gt;字符集<br>不写编码形式会出现乱码</p><ul><li>常用的GB2312，BIG5,GBK,UTF-8，其中UTF-8称为万国码</li></ul></blockquote><hr><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><blockquote><p>h1 - h6</p></blockquote><p>html提供了各等级的标题标签，</p><ul><li>加了标题标签的文字会被加粗，字号也会变得更大</li><li>一个标题会独占一行</li></ul><blockquote><p>段落标签和换行标签<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>可以把文字分为不同的段落</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>是空行，<span class="tag">&lt;<span class="name">br</span> /&gt;</span>强制换行</span><br></pre></td></tr></table></figure><p>br是一个单标签</p><hr><h3 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><h3 id="文本格式化标签-1"><a href="#文本格式化标签-1" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><div class="table-container"><table><thead><tr><th>标签</th><th>语义</th><th>说明</th></tr></thead><tbody><tr><td>&lt; strong&gt;&lt; /strong&gt;或者&lt; b&gt;</td><td>strong（加强）</td><td>加粗</td></tr><tr><td>&lt; em&gt;</td><td>emphaseized（强调）</td><td>斜体</td></tr><tr><td>&lt; cite&gt;</td><td>cite（引用）</td><td>斜体</td></tr><tr><td>&lt; sup&gt;</td><td>superscripted</td><td>上标</td></tr><tr><td>&lt; sub&gt;</td><td>subscripted</td><td>下标</td></tr><tr><td>&lt; del&gt;</td><td></td><td>删除线</td></tr><tr><td>&lt; ins&gt;</td><td></td><td>下划线</td></tr></tbody></table></div><hr><h3 id="lt-div-gt-和-lt-span-gt-标签"><a href="#lt-div-gt-和-lt-span-gt-标签" class="headerlink" title="&lt; div&gt;和&lt; span&gt;标签"></a>&lt; div&gt;和&lt; span&gt;标签</h3><blockquote><p>没有语义的用来装内容，当成一个盒子</p></blockquote><ul><li>&lt; div&gt;占用一哈</li><li>&lt; span&gt;跨距显示，一行有多个</li></ul><hr><h3 id="图像标签和路径"><a href="#图像标签和路径" class="headerlink" title="图像标签和路径"></a>图像标签和路径</h3><h5 id="1-图像标签"><a href="#1-图像标签" class="headerlink" title="1.图像标签"></a>1.图像标签</h5><p>在html中，&lt; img&gt;用来定义一个图像（imaging)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;图像URL&quot;/&gt;</span><br></pre></td></tr></table></figure></p><ul><li>src是必须属性，它用于指定图像文件的路径和文件名（属性就是这个图像标签的特性)</li><li>使用时把图片发在同一个文件夹里面</li></ul><div class="table-container"><table><thead><tr><th>src</th><th>图像路径</th></tr></thead><tbody><tr><td>alt</td><td>文本提示（在图像无法显示时候会提示）</td></tr><tr><td>title</td><td>图像提示</td></tr><tr><td>width</td><td>宽度设置</td></tr><tr><td>height</td><td>高度设置</td></tr><tr><td>border</td><td>图像的边框</td></tr></tbody></table></div><ul><li>图像可以有多个属性，但是都放在img后面，且各个属性没有先后之分</li><li>需要用空格隔开</li><li>采取属性键对</li></ul><hr><h2 id="超链接标签（重点）"><a href="#超链接标签（重点）" class="headerlink" title="超链接标签（重点）"></a>超链接标签（重点）</h2><blockquote><p>在html中，&lt; a&gt;标签用于定义超链接，作用从一个页面链接到另一个页面</p></blockquote><h5 id="超链接的语法格式"><a href="#超链接的语法格式" class="headerlink" title="超链接的语法格式"></a>超链接的语法格式</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span>=<span class="string">&quot;窗口弹出方式&quot;</span>&gt;</span>文本或者图像<span class="tag">&lt;<span class="name">a</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>链接分类：</p><ul><li>外部链接：必须写上绝对路径,加上https://</li><li>内部链接（同一目录【级别】下的链接）：直接写页面的名称如”index.html”</li><li>空链接：#</li><li>下载链接：地址链接的是 文件.exe 或者是 .zip 等压缩包形式,会直接下载这个exe或者zip，音频等。</li><li>网页链接元素，在网页里的各种网页元素，如文本，图像，表格，音频，视频都可以添加超链接。</li><li>锚点链接：点击该处可以快速定位到网页的某一个位置（也可以实现跳转到顶部等等）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">target:</span><br><span class="line">  _self在当前页面打开(默认的），_blank在新的窗口打开</span><br></pre></td></tr></table></figure><ul><li>锚点链接的具体操作：<h2 id="先把字串里面的写入”-一段id”-之后找到目标的标签，在其之后加上”id-”这段id的名字””就可以实现锚点跳转。"><a href="#先把字串里面的写入”-一段id”-之后找到目标的标签，在其之后加上”id-”这段id的名字””就可以实现锚点跳转。" class="headerlink" title="先把字串里面的写入”#一段id”,之后找到目标的标签，在其之后加上”id=”这段id的名字””就可以实现锚点跳转。"></a>先把字串里面的写入”#一段id”,之后找到目标的标签，在其之后加上”id=”这段id的名字””就可以实现锚点跳转。</h2><h3 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h3><blockquote><p> html中注释形式如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释 --&gt;</span></span><br></pre></td></tr></table></figure></blockquote></li><li>可以使用”Ctrl + /或?”直接快捷键打出来</li><li>注释不会显示，只是用来</li></ul><hr><h4 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h4><p>  <img src="file:///d%3A/cworkspace/web/%E7%AC%94%E8%AE%B01.png" alt="D:\cworkspace\web\笔记1.png"></p><h2 id="重点记住空格和大于小于号。"><a href="#重点记住空格和大于小于号。" class="headerlink" title="   - 重点记住空格和大于小于号。"></a>   - 重点记住空格和大于小于号。</h2><h2 id="1-表格标签"><a href="#1-表格标签" class="headerlink" title="1.表格标签"></a>1.表格标签</h2><h4 id="1-1表格的主要作用"><a href="#1-1表格的主要作用" class="headerlink" title="1.1表格的主要作用"></a>1.1表格的主要作用</h4><blockquote><p>表格主要是用来显示，展示数据，因为它可以让数据显示的非常规律，可读性非常好，表格不是用来布局页面的，而是用来展示数据的。</p><h4 id="1-2表格的基本语法"><a href="#1-2表格的基本语法" class="headerlink" title="1.2表格的基本语法"></a>1.2表格的基本语法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span>//表格里的行</span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    ···</span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  ···</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>&lt; table&gt;是用来定义表格的标签</li><li>&lt; tr&gt;&lt; /tr&gt;用来定义行，必须定义在table内部</li><li>&lt; td&gt;&lt; /td&gt;用来定义单元格，必须定义在&lt; tr&gt;内</li><li>&lt; th&gt;&lt; /th&gt;表头单元格标签，（table head)，表头内容会被加粗，同时居中。</li></ul></blockquote><h4 id="1-2表格属性-到这里去练习一下"><a href="#1-2表格属性-到这里去练习一下" class="headerlink" title="1.2表格属性(到这里去练习一下)"></a>1.2表格属性(到这里去练习一下)</h4><blockquote><p>不常用，因为后面会使用CSS</p></blockquote><ul><li>align （属性值：left ,right , center),设置表格的位置</li><li>border (1 或 “” ),规定表格是否具有边框，默认为””，表示没有边框</li><li>width （像素值或百分比），规定表格的宽度</li><li>height (像素值或百分比) ， 规定表格的长度</li><li>cellpadding (像素值)，规定单元边沿与其内容之间的空白，默认像素为1。</li><li>cellspacing （像素值），规定单元格之间的空白，默认像素值为2.</li></ul><h4 id="1-3表格结构标签"><a href="#1-3表格结构标签" class="headerlink" title="1.3表格结构标签"></a>1.3表格结构标签</h4><blockquote><p>使用场景：因为表格可能很长，</p></blockquote><hr><h4 id="音频文件"><a href="#音频文件" class="headerlink" title="音频文件"></a>音频文件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//html里如果属性名字和属性值完全一致，可以只写属性名字。</span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">//等同于<span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>controls为显示控制面板</li><li>loop是循环播放</li><li>autoplay自动播放</li><li>支持mp3,WebM,Ogg文件</li></ul><hr><h4 id="视频文件"><a href="#视频文件" class="headerlink" title="视频文件"></a>视频文件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;  .mp4&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>loop循环播放</li><li>mute静音播放</li><li>autoplay自动播放</li><li>支持mp4,WebM,Ogg文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces-1007div2题解</title>
      <link href="/2025/03/01/Codeforces-1007div2%E9%A2%98%E8%A7%A3/"/>
      <url>/2025/03/01/Codeforces-1007div2%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="A-D1题解"><a href="#A-D1题解" class="headerlink" title="A - D1题解"></a>A - D1题解</h2><p>连续掉分ing, 什么时候才能变得又快又猛呢hehehe。。。</p><h2 id="A-The-Play-Never-Ends"><a href="#A-The-Play-Never-Ends" class="headerlink" title="A. The Play Never Ends"></a>A. The Play Never Ends</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    i64 k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (k % <span class="number">3</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Perfecto"><a href="#B-Perfecto" class="headerlink" title="B. Perfecto"></a>B. Perfecto</h2><p>打表观察 从 1 到 300 sum的和是平方数的数字，发现和是平方数的只有  1 36 1225…..， 想要不出现平方数，只需要在前 i 个（其中 i 是使得sum是平方数的数字）不全是i的排列，也就是把每个满足和是平方数的最后一个数字和下一个数字替换，如果不超出范围就可以，否则-1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    i64 n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    i64 sum = <span class="number">0</span>;</span><br><span class="line">    <span class="function">vector&lt;i64&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (i64 i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        a[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i64 i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        sum += a[i];</span><br><span class="line">        i64 g = <span class="built_in">sqrt</span>(sum);</span><br><span class="line">        <span class="keyword">if</span> (g * g == sum) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &gt; n) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum -= a[i];</span><br><span class="line">            <span class="built_in">swap</span>(a[i], a[i + <span class="number">1</span>]);</span><br><span class="line">            sum += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i64 i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; \n&quot;</span>[i == n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    i64 t;</span><br><span class="line">    cin &gt;&gt; t;   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Trapmigiano-Reggiano"><a href="#C-Trapmigiano-Reggiano" class="headerlink" title="C. Trapmigiano Reggiano"></a>C. Trapmigiano Reggiano</h2><p> 以en为根， 对树进行分层，每次取深度较大的节点，之后取深度较小的节点，走最深的情况是一条链，这时候会走 n / 2个点，之后n / 2个操作又会回到根，其他情况会在某条最长链的某个节点来后跳（因为有别的树链），如果最后回到原点直接输出，否则-1</p><blockquote><p>update: 看了大佬们说答案似乎不可能出现-1， 好像可以直接后序遍历，答案总会存在</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, st, en;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; st &gt;&gt; en;</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">        e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dis</span><span class="params">(n + <span class="number">1</span>, <span class="number">-1</span>)</span></span>;</span><br><span class="line">    dis[en] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> self, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> v : e[u]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v != fa) &#123;</span><br><span class="line">                dis[v] = dis[u] + <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">self</span>(self, v, u);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, en, <span class="number">-1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        ans[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(ans.<span class="built_in">begin</span>() + <span class="number">1</span>, ans.<span class="built_in">end</span>(), </span><br><span class="line">        [&amp;](<span class="type">int</span> a, <span class="type">int</span> b) &#123;</span><br><span class="line">            <span class="keyword">return</span> dis[a] &gt; dis[b];</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//cerr &lt;&lt; &quot;dis:&quot; &lt;&lt; dis[st] &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">    <span class="keyword">if</span> (dis[st] == <span class="number">-1</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; \n&quot;</span>[i == n];</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D1-Infinite-Sequence-Easy-Version"><a href="#D1-Infinite-Sequence-Easy-Version" class="headerlink" title="D1. Infinite Sequence (Easy Version)"></a>D1. Infinite Sequence (Easy Version)</h2><p> 手玩样例， 发现 7 = 8, 78 = 79……, 那么每对在 “^” 内（也就是除以二一样）的数字总是一样的，他们作为下一个数字的异或和的时候总是不做贡献，可以忽略。</p><p>我们不妨补全给定的n数组，使得n总是奇数（这样下一位置开始时候总是出现两两相等情况）</p><p>继续观察，发现</p><ul><li>当 x / 2是奇数时候，这时除了前n个给定的数字，其他总是两两成对出现， 此时 x = s[ n ] &amp; 1;</li><li>当 x / 2是偶数的时候，除了x / 2,在n + 1到x / 2之间的所有数字都是成对出现，不参与计算，故 x = s[ n ] &amp; (x / 2),</li></ul><p>这样递归下去可以找到答案，最坏时间复杂度为o(logn);</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    i64 n, l, r;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;i64&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">s</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        n++;</span><br><span class="line">        a.<span class="built_in">push_back</span>(s[n / <span class="number">2</span>] &amp; <span class="number">1</span>);</span><br><span class="line">        s.<span class="built_in">push_back</span>(s[n - <span class="number">1</span>] + a[n]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> f = [&amp;](<span class="keyword">auto</span> self, i64 x) -&gt; <span class="type">int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= n) &#123;</span><br><span class="line">            <span class="keyword">return</span> a[x];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (x / <span class="number">2</span> &lt;= n) &#123;</span><br><span class="line">            <span class="keyword">return</span> (s[x / <span class="number">2</span>] &amp; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> g;</span><br><span class="line">        <span class="keyword">if</span> ((((x / <span class="number">2</span>) - n) &amp; <span class="number">1</span>)) &#123;</span><br><span class="line">            g = <span class="built_in">self</span>(self, x / <span class="number">2</span>) ^ (s[n] &amp; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            g = (s[n] &amp; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> g;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if (l &lt;= n * 2) &#123;</span></span><br><span class="line">    <span class="comment">//     for (int i = n + 1; i &lt;= l; i++) &#123;</span></span><br><span class="line">    <span class="comment">//         a.push_back(s[i / 2] &amp; 1);</span></span><br><span class="line">    <span class="comment">//         s.push_back(a[i] + s[i - 1]);</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     cout &lt;&lt; a[l] &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="built_in">f</span>(f, l) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> codeforce题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeTonRound4-div1+div2题解</title>
      <link href="/2025/02/27/CodeTonRound4-div1-div2%E9%A2%98%E8%A7%A3/"/>
      <url>/2025/02/27/CodeTonRound4-div1-div2%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="题解-A-E"><a href="#题解-A-E" class="headerlink" title="题解 A - E"></a>题解 A - E</h2><hr><blockquote><p>Dream is so far ~</p></blockquote><h4 id="A-Beautiful-Sequence"><a href="#A-Beautiful-Sequence" class="headerlink" title="A. Beautiful Sequence"></a>A. Beautiful Sequence</h4><p>检查每一位对应的数字是否小于等于位置，如果可以说明这个数字可以移动到对应位置上， 遍历即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt;= i) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="B-Candies"><a href="#B-Candies" class="headerlink" title="B. Candies"></a>B. Candies</h4><p>考虑到从一开始往后面变，且每次只能变为 $2 <em> n - 1$ 或 $2 </em> n + 1$ ， 显然这些数都是奇数， 考虑从末位往前处理， 每次除以二如果是奇数说明这一次选了2来到这一步，否则将除以二结果加一，同时意味着这一步选了1。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    i64 n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">while</span> (n != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">int</span> now = n / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (!(now &amp; <span class="number">1</span>)) &#123;</span><br><span class="line">            now ++;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        n = now;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = ans.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="C-Make-It-Permutation"><a href="#C-Make-It-Permutation" class="headerlink" title="C. Make It Permutation"></a>C. Make It Permutation</h4><p>首先考虑有一个以上数字，显然需要使用第二步操作去掉（否则将不会形成一排列），<br>之后对于去重后数组， 将其排序， 从后面往前面dp过去， 考虑把后面全部删掉或者是在这两位之间补齐剩下的数字， 有<br>$dp[i] = min(dp[i + 1] + (b[i + 1] - b[i] - 1) <em> d, c </em> (nn - 1 - i));$<br>即当前位置最小需要等于上一位到这一位之间需要补齐数字和把后面全部删掉的数字。<br>注意一开始的1要补上（if no one in this array)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    i64 n, c, d;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; c &gt;&gt; d;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; b;</span><br><span class="line"></span><br><span class="line">    i64 sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">1</span>] != <span class="number">1</span>) &#123;</span><br><span class="line">        b.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        sum += d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    b.<span class="built_in">push_back</span>(a[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == a[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            sum += c;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        b.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> nn = b.<span class="built_in">size</span>();</span><br><span class="line">    <span class="function">vector&lt;i64&gt; <span class="title">dp</span><span class="params">(nn)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = nn - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        dp[i] = <span class="built_in">min</span>&lt;i64&gt;(dp[i + <span class="number">1</span>] + (b[i + <span class="number">1</span>] - b[i] - <span class="number">1</span>) * d, c * (nn - <span class="number">1</span> - i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; dp[<span class="number">0</span>] + sum &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="D-Climbing-The-Tree"><a href="#D-Climbing-The-Tree" class="headerlink" title="D. Climbing The Tree"></a>D. Climbing The Tree</h4><p>蜗牛爬树，很好玩的数学题， 直接给代码 ： 思路见代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun</span> <span class="params">(<span class="type">int</span> h, <span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (h &lt;= x) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">ceil</span> ( (h - x) * <span class="number">1.0</span> / (x - y) ) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="type">bool</span> f = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">int</span> l, r;</span><br><span class="line">    <span class="keyword">while</span> (q --) &#123;</span><br><span class="line">        <span class="type">int</span> op, a, b, n;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>) &#123;</span><br><span class="line">            cin &gt;&gt; n;</span><br><span class="line">            <span class="keyword">if</span> (!f) &#123;</span><br><span class="line">                <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">                    l = <span class="number">1</span>;</span><br><span class="line">                    r = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    l = a * n - b * n - a + <span class="number">2</span> * b + <span class="number">1</span>;</span><br><span class="line">                    r = a * n - b * n + b;</span><br><span class="line">                &#125;</span><br><span class="line">                f = <span class="literal">true</span>;</span><br><span class="line">                cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> x, y;</span><br><span class="line">                <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">                    x = <span class="number">1</span>;</span><br><span class="line">                    y = a;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    x = a * n - b * n - a + <span class="number">2</span> * b + <span class="number">1</span>;</span><br><span class="line">                    y = a * n - b * n + b;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">max</span> (x, l) &gt; <span class="built_in">min</span> (y, r) ) cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    l = <span class="built_in">max</span> (x, l);</span><br><span class="line">                    r = <span class="built_in">min</span> (y, r);</span><br><span class="line">                    cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!f) cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">fun</span> (l, a, b) == <span class="built_in">fun</span> (r, a, b) ) cout &lt;&lt; <span class="built_in">fun</span> (l, a, b) &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                <span class="keyword">else</span> cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (t --) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="E-Monster"><a href="#E-Monster" class="headerlink" title="E. Monster"></a>E. Monster</h4><p>给出一张图， 点 u 的遍历需要先经过这一个点所需权值 a[ u ] 个点后才可遍历， 一开始想这道题会想着先选出所有点权为 0 的点， 以这个点作为起点开始bfs 维护一个Krusal树，想着想着不知道怎么写了，换个了思路， 用一个小根堆记录当前能到达的点的相邻所有点， 一开始把所有0的点压入堆中， 用个变量记录当前已经走过的点的数量，之后每次从堆中取出一个点， 检查这个点的权是否小于已经走过的点的数量， 如果大于说明不能到达，直接停止（因为开的是小根堆）， 否则对这个点周围的点进行遍历，如果可以到达就让走过的点++ ， 否则压入堆中等待处理。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> u, w;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&gt;(<span class="type">const</span> node&amp; a) <span class="type">const</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>-&gt;w &gt; a.w; &#125; </span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">        e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">vis</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> fun = [&amp;](<span class="type">int</span> s) -&gt; <span class="type">bool</span> &#123;</span><br><span class="line">        priority_queue&lt;node, vector&lt;node&gt;, greater&lt;node&gt;&gt; q;</span><br><span class="line">        <span class="comment">//queue&lt;int&gt; Q;</span></span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        q.<span class="built_in">push</span>(&#123;s, a[s]&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="keyword">auto</span> [u, w] = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span> (vis[u] == s) <span class="keyword">continue</span>;</span><br><span class="line">            vis[u] = s;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cnt &gt;= w) &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">auto</span> v : e[u]) <span class="keyword">if</span> (vis[v] != s) &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(&#123;v, a[v]&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cerr &lt;&lt; &quot;cnt : &quot; &lt;&lt; cnt &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">        <span class="keyword">return</span> (cnt == n);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">0</span> &amp;&amp; !vis[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fun</span>(i)) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> codeforce题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Educational-codeforce-Round174题解</title>
      <link href="/2025/02/27/Educational-codeforce-Round174%E9%A2%98%E8%A7%A3/"/>
      <url>/2025/02/27/Educational-codeforce-Round174%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/2069">Edu174</a></p><h2 id="A-Was-there-an-Array"><a href="#A-Was-there-an-Array" class="headerlink" title="A Was there an Array?"></a>A Was there an Array?</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">观察题目发现如果给定的B[i] = 1, 左右都得是相等的， 如果出现了连续三个数字( i - 1, i , i + 1 ) 对应是 1 0 1，则有 a[i - 1] = a[ i ], a[ i ] = a[i + 1],  得出 a[i - 1] = a[i + 1], 但是i == 0 又推出 a[i - 1] != a[i + 1]矛盾，所以只需要判断一下是否出现了这种结构即可</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">b</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b[i] == <span class="number">0</span> &amp;&amp; b[i - <span class="number">1</span>] == <span class="number">1</span> &amp;&amp; b[i + <span class="number">1</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Set-of-Strangers"><a href="#B-Set-of-Strangers" class="headerlink" title="B. Set of Strangers"></a>B. Set of Strangers</h2><p>观察到如果出现有相邻的相同数字，则对应数字需要操作两次才能变成另外一个数字，如果没有出现相邻，那么同一种数字总是需要1次即可完成操作，</p><p>暴力统计每个数字需要的操作次数，取最小的 n - 1 次累计求和就是答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">int</span> way[<span class="number">4</span>][<span class="number">2</span>] = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector <span class="title">a</span><span class="params">(n + <span class="number">1</span>, vector&lt;<span class="type">int</span>&gt; (m + <span class="number">1</span>))</span>, <span class="title">vis</span><span class="params">(n + <span class="number">1</span>, vector&lt;<span class="type">int</span>&gt; (m + <span class="number">1</span>))</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> self, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> g) -&gt; <span class="type">void</span> &#123;</span><br><span class="line">        vis[x][y] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> dx = x + way[i][<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> dy = y + way[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (dx &lt;= <span class="number">0</span> || dy &lt;= <span class="number">0</span> || dx &gt; n || dy &gt; m || vis[dx][dy] || a[dx][dy] != g) <span class="keyword">continue</span>;</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">self</span>(self, dx, dy, g);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!vis[i][j]) &#123;</span><br><span class="line">                f = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, i, j, a[i][j]);</span><br><span class="line">                <span class="keyword">if</span> (f) &#123;</span><br><span class="line">                    mp[a[i][j]] = <span class="number">2</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!mp.<span class="built_in">count</span>(a[i][j])) &#123;</span><br><span class="line">                        mp[a[i][j]] = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [x, y] : mp) &#123;</span><br><span class="line">        b.<span class="built_in">push_back</span>(y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; b.<span class="built_in">size</span>() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        ans += b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Beautiful-Sequence"><a href="#C-Beautiful-Sequence" class="headerlink" title="C. Beautiful Sequence"></a>C. Beautiful Sequence</h2><p>我的思路 ： </p><p>题目要求Beautiful序列满足以下条件：</p><ol><li><strong>左侧条件</strong>：除第一个元素外，每个元素左侧存在一个比它小的元素。</li><li><strong>右侧条件</strong>：除最后一个元素外，每个元素右侧存在一个比它大的元素。</li></ol><p>当元素只能取1、2、3时，序列结构必为 <code>[1, 2, ..., 2, 3]</code>，原因如下：</p><h3 id="首元素必须为1"><a href="#首元素必须为1" class="headerlink" title="首元素必须为1"></a>首元素必须为1</h3><ul><li>若首元素为2或3，后续元素无法满足左侧条件（如首元素为2时只能接3，但长度不足；首元素为3时无后续元素）。</li></ul><h3 id="末元素必须为3"><a href="#末元素必须为3" class="headerlink" title="末元素必须为3"></a>末元素必须为3</h3><ul><li>若末元素非3（如1或2），倒数第二个元素无法满足右侧条件（如末元素为2时，右侧无更大元素）。</li></ul><h3 id="中间元素必须全为2"><a href="#中间元素必须全为2" class="headerlink" title="中间元素必须全为2"></a>中间元素必须全为2</h3><ul><li>中间元素不能为1（左侧无更小元素）或3（右侧无更大元素），因此只能由2构成，且至少包含一个2（长度≥3）。</li></ul><p>综上，Beautiful序列的结构必为：</p><p> [ 1 2 2 2   … 3 ]</p><hr>统计所有满足条件的子序列：1. 选择一个1的位置`i`作为首元素。2. 选择一个3的位置`j`（`j > i`）作为末元素。3. 中间区间`(i, j)`中至少有一个2，且所有元素为2。设区间`(i, j)`中有`c`个2，则中间部分的子序列组合数为：$$2^c - 1$$总答案为所有`(i, j)`对的组合数之和：$$\text{ans} = \sum_{\substack{i: a[i]=1}} \sum_{\substack{j>i: a[j]=3}} \left(2^{\text{\#}\{k \in (i,j): a[k]=2\}} - 1\right)$$---### 前缀和数组定义前缀和数组`P`，其中：$$P[i] = \text{数组前}i\text{个元素中2的个数}$$区间`(i, j)`中2的数量为：$$P[j-1] - P[i]$$### 优化内层求和将内层求和转换为线性遍历：- 对于每个位置`j`（`a[j]=3`），计算`X = P[j-1]`。- 累加所有`i < j`且`a[i]=1`的贡献：  $$  \sum_{\substack{i: a[i]=1 \\ i < j}} \left(2^{X - P[i]} - 1\right)  $$通过分解公式：$$2^{X - P[i]} = 2^X \cdot 2^{-P[i]}$$定义累加量：- `sumInv`：所有左侧1对应的`2^{-P[i]`之和。- `cntOne`：左侧1的个数。则当前`j`的贡献为：$$2^X \cdot \text{sumInv} - \text{cntOne}$$### 实现步骤1. **遍历数组**，维护前缀和`P`。2. **遇到1时**：更新`cntOne`和`sumInv += 2^{-P[i]}`。3. **遇到3时**：根据当前`X = P[j-1]`计算贡献并累加。---<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="结构限制"><a href="#结构限制" class="headerlink" title="结构限制"></a>结构限制</h3><ul><li>Beautiful序列严格遵循<code>[1, 2, ..., 2, 3]</code>形式，中间至少一个2。</li></ul><h3 id="计数公式"><a href="#计数公式" class="headerlink" title="计数公式"></a>计数公式</h3><ul><li>每个合法的<code>(i, j)</code>对贡献为<code>2^&#123;中间2的个数&#125; - 1</code>。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">constexpr</span> T <span class="title">power</span><span class="params">(T a, i64 b, T mod)</span> </span>&#123;</span><br><span class="line">    T res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; b; b /= <span class="number">2</span>, a = a * a % mod) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b % <span class="number">2</span>) &#123;</span><br><span class="line">            res = (res * a) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200005</span>;</span><br><span class="line"><span class="function">vector&lt;i64&gt; <span class="title">pow2</span><span class="params">(N)</span>, <span class="title">inv</span><span class="params">(N)</span></span>;</span><br><span class="line"></span><br><span class="line">i64 inv2 = <span class="built_in">power</span>&lt;i64&gt;(<span class="number">2</span>, mod - <span class="number">2</span>, mod);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">P</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        P[i] = P[i - <span class="number">1</span>] + (a[i] == <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    i64 one = <span class="number">0</span>, sum = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[j] == <span class="number">1</span>) &#123;</span><br><span class="line">            one = (one + <span class="number">1</span>) % mod;</span><br><span class="line">            sum = (sum + inv[P[j]]) % mod;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[j] == <span class="number">2</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> X = P[j - <span class="number">1</span>];</span><br><span class="line">            i64 g = ((pow2[X] * sum) % mod - one) % mod;</span><br><span class="line">            <span class="keyword">if</span> (g &lt; <span class="number">0</span>) g += mod;</span><br><span class="line">            ans = (ans + g) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans % mod &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    pow2[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line">        pow2[i] = (pow2[i - <span class="number">1</span>] * <span class="number">2</span>) % mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    inv[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line">        inv[i] = (inv[i - <span class="number">1</span>] * inv2) % mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题解dp思路 :<br> 等我看完了再update</p><h2 id="D-Palindrome-Shuffle"><a href="#D-Palindrome-Shuffle" class="headerlink" title="D. Palindrome Shuffle"></a>D. Palindrome Shuffle</h2><p>首先知道前后本来就回文的字母可以先移除，所以只需要处理一个前后两个字母不一样的字符串即可，那么问题就变成处理一个字符串S， 只能重新排列S的某个前缀或者后缀子串使得它变成Palindrome</p><p>来看样例4 : </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acbacddacbca</span><br></pre></td></tr></table></figure><p>可以看出需要再4 - 5进行操作，那么也可以在 4 - 6, 4 - 7 等等长度大于他的子串（只需要包含他）进行操作，即长度具有单调性，可以使用二分答案。</p><p>我们处理从前开始翻转情况，那么从后开始翻转情况可以reverse后套用从前面开始的情况进行操作。</p><p> <strong>check函数</strong>：</p><blockquote><p>首先统计待处理字符串中每个字母出现的次数，之后分两种情况 : </p></blockquote><ul><li><p>情况一 ： <strong>L（左字符串起始位置） + len - 1 &lt;= n / 2</strong><br>此时和样例4一样，需要在len范围内前缀和后缀里面的所有字符数量相同，同时保证没操作到的字符本来就是回文的（可以多开一个数组预处理记录，看代码is, ned部分）</p><ul><li>情况二 ： <strong>L（左字符串起始位置） + len - 1 &gt; n / 2</strong><br>只需要左边的每个字符数量全部<strong>大于或等于</strong>右边剩下的即可。</li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line"></span><br><span class="line">    s = <span class="string">&#x27; &#x27;</span> + s;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n = s.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">while</span> (s[l] == s[r] &amp;&amp; l &lt;= r) &#123;</span><br><span class="line">        l++, r--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (l &gt; r) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">c</span><span class="params">(<span class="number">27</span> + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i++) &#123;</span><br><span class="line">        c[s[i] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">is</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">ned</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] != s[n - i + <span class="number">1</span>]) &#123;</span><br><span class="line">            is[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (is[i + <span class="number">1</span>] == <span class="number">1</span> || ned[i + <span class="number">1</span>]) &#123;</span><br><span class="line">            ned[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> ck = [&amp;](<span class="type">int</span> len) -&gt; <span class="type">bool</span> &#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; <span class="built_in">g</span>(<span class="number">28</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= l + len - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            g[s[i] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (l + len - <span class="number">1</span> &lt;= n / <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = r; i &gt;= r - len + <span class="number">1</span>; i--) &#123;</span><br><span class="line">                g[s[i] - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (g[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ned[l + len - <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (c[i] - g[i] &gt; g[i]) &#123;</span><br><span class="line">                    <span class="comment">//cout &lt;&lt; len &lt;&lt; &#x27; &#x27; &lt;&lt; char(i + &#x27;a&#x27;) &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> lo = <span class="number">2</span>, ri = r - l;</span><br><span class="line">    <span class="keyword">while</span> (lo &lt;= ri) &#123;</span><br><span class="line">        <span class="type">int</span> mid = (lo + ri) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">ck</span>(mid)) &#123;</span><br><span class="line">            ri = mid - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            lo = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = lo;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">reverse</span>(s.<span class="built_in">begin</span>() + <span class="number">1</span>, s.<span class="built_in">end</span>());</span><br><span class="line">    n = s.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">    l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">while</span> (s[l] == s[r] &amp;&amp; l &lt;= r) &#123;</span><br><span class="line">        l++, r--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (l &gt; r) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">h</span><span class="params">(<span class="number">27</span> + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i++) &#123;</span><br><span class="line">        h[s[i] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">is2</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">ned2</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] != s[n - i + <span class="number">1</span>]) &#123;</span><br><span class="line">            is2[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (is2[i + <span class="number">1</span>] == <span class="number">1</span> || ned2[i + <span class="number">1</span>]) &#123;</span><br><span class="line">            ned2[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ll = <span class="number">2</span>, rr = r - l;</span><br><span class="line">    <span class="keyword">while</span> (ll &lt;= rr) &#123;</span><br><span class="line">        <span class="type">int</span> mid = (ll + rr) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">ck</span>(mid)) &#123;</span><br><span class="line">            rr = mid - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ll = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ans = <span class="built_in">min</span>(ans, ll);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> codeforce题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaData类学习</title>
      <link href="/2025/02/27/JavaData%E7%B1%BB%E5%AD%A6%E4%B9%A0/"/>
      <url>/2025/02/27/JavaData%E7%B1%BB%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<ul><li>Java的DATA类</li></ul><h2 id="Date类的概述"><a href="#Date类的概述" class="headerlink" title="Date类的概述"></a>Date类的概述</h2><ol><li><p>java.util,Date 表示日期和时间的类</p></li><li><p>类 Date 表示特定的瞬间，精确到千分之一秒（毫秒）</p></li><li><p>实例引入：获取时间原点到当前系统时间经历了多少秒</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 时间原点：1970 年 01 月 01 日 00:00:00 </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoDate</span> &#123;    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;       </span><br><span class="line">            System.out.println(System.currentTimeMillis());    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;       </span><br></pre></td></tr></table></figure></li></ol><h2 id="Date类常用的构造方法和成员方法"><a href="#Date类常用的构造方法和成员方法" class="headerlink" title="Date类常用的构造方法和成员方法"></a>Date类常用的构造方法和成员方法</h2><h3 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h3><p>getTime()方法。返回：时间原点以来，此Date对象表示的毫秒数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoGetTime</span> &#123;    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;        </span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();        </span><br><span class="line">        <span class="type">long</span> <span class="variable">time</span> <span class="operator">=</span> date.getTime();                <span class="comment">// 输出：1578728202850       </span></span><br><span class="line">     <span class="comment">// 该方法类似于 System.currentTimeMillis()        </span></span><br><span class="line">         System.out.println(time);   </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><h4 id="Date类的无参构造方法。"><a href="#Date类的无参构造方法。" class="headerlink" title="Date类的无参构造方法。"></a>Date类的无参构造方法。</h4><p>返回：当前系统的日期和时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoDate1</span> &#123;    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;       </span><br><span class="line">         <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();         <span class="comment">// 输出：Sat Jan 11 15:40:50 CST 2020      </span></span><br><span class="line">        System.out.println(date);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Date类的带参构造方法"><a href="#Date类的带参构造方法" class="headerlink" title="Date类的带参构造方法"></a>Date类的带参构造方法</h4><p>Date(long date) 参数为一个毫秒值，把传入的毫秒值转换为Date日期</p><p>返回：传入参数（毫秒值）对应的的日期和时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoDate2</span> &#123;   </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;        </span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">0L</span>);         <span class="comment">// 这里输出的是0毫秒时的日期和时间，即时间原点的日期和时间        // 输出：Thu Jan 01 08:00:00 CST 1970        </span></span><br><span class="line">        System.out.println(date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DateFormat抽象类和SimpleDateFormat实现类"><a href="#DateFormat抽象类和SimpleDateFormat实现类" class="headerlink" title="DateFormat抽象类和SimpleDateFormat实现类"></a>DateFormat抽象类和SimpleDateFormat实现类</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ol><li><p>java.text.DateFormat类，是日期/时间格式化子类的抽象类</p></li><li><p>作用：格式化(也就是日期-&gt;文本)、解析(文本-&gt;日期)</p></li><li><p>成员方法</p><ol><li>string format( Datedate)按照指定的模式,把Date日期,格式化为符合模式的字符串</li><li>Date parse( string source)把符合模式的字符串,解析为Dote日期</li></ol></li><li><p>DateFormat类是一个抽象类,无法直接创建对象使用，可以使用 DateFormat类的子类<strong>java.text.SimpleDateFormat extends DateFormat</strong></p></li><li><p>构造方法：<strong>SimpleDateFormat(String pattern)</strong>用给定的模式和默认语言环境的日期格式符号构造SimpleDateFormat</p></li></ol><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol><li><p>测试DateFormat类的format方法，输出指定格式的日期、时间</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01FormatMethod</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建SimpleDateFormat对象，在SimpleDateFormat(String pattern)构造方法中传入指定的模式</span></span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy 年 MM 月 dd 日 HH 时 mm 分 ss 秒&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 调用DateFormat的实现类SimpleDateFormat中的format方法，</span></span><br><span class="line">        <span class="comment">// 按照构造方法中指定的模式，把Date解析为符合模式的字符串（文本）</span></span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">dateFormat</span> <span class="operator">=</span> simpleDateFormat.format(date);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// Sat Jan 11 16:24:43 CST 2020</span></span><br><span class="line">        System.out.println(date);</span><br><span class="line">        <span class="comment">// 2020 年 01 月 11 日 16 时 24 分 43 秒</span></span><br><span class="line">        System.out.println(dateFormat);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试DateFormat类的parse方法，把符合构造方法中模式的字符串，解析为Date日期</p></li></ol><pre><code class="lang-java">import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;public class Demo01ParseMethod &#123;    public static void main(String[] args)            throws ParseException &#123;        // 创建SimpleDateFormat对象，在SimpleDateFormat(String pattern)构造方法中传入指定的模式        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;yyyy 年 MM 月 dd 日 HH 时 mm 分 ss 秒&quot;);        // 调用 SimpleDateFormat对象中的 parse方法，把符合构SimpleDateFormat(String pattern)造方法中模式的字符串，解析为Date日期        Date dateParse = simpleDateFormat.parse(&quot;2020 年 01 月 11 日 16 时 24 分 43 秒&quot;);        // Sat Jan 11 16:24:43 CST 2020        System.out.println(dateParse);    &#125;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Educational codeforceRound 173 题解</title>
      <link href="/2024/12/26/Educational-codeforceRound-173-%E9%A2%98%E8%A7%A3/"/>
      <url>/2024/12/26/Educational-codeforceRound-173-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">constexpr</span> i64 inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function">tuple&lt;T, T, T&gt; <span class="title">MaxArray</span><span class="params">(<span class="type">const</span> vector&lt;T&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (nums.<span class="built_in">size</span>() == <span class="number">1</span>) <span class="keyword">return</span> &#123;<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    T cur = nums[<span class="number">1</span>], maxp = nums[<span class="number">1</span>];      </span><br><span class="line">    <span class="type">int</span> start = <span class="number">1</span>;              </span><br><span class="line">    <span class="type">int</span> le = <span class="number">1</span>;        </span><br><span class="line">    <span class="type">int</span> ri = <span class="number">1</span>;            </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (cur + nums[i] &lt; nums[i]) &#123;</span><br><span class="line">            cur = nums[i];</span><br><span class="line">            start = i;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cur &gt; maxp) &#123;</span><br><span class="line">            maxp = cur;</span><br><span class="line">            le = start; </span><br><span class="line">            ri = i;       </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;le, ri, maxp&#125;; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;i64&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> pos = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span> (a[i] != <span class="number">1</span> &amp;&amp; a[i] != <span class="number">-1</span>) &#123;</span><br><span class="line">            pos = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pos == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">auto</span> [x, y, z] = <span class="built_in">MaxArray</span>&lt;i64&gt; (a);</span><br><span class="line">        i64 tp = <span class="built_in">max</span>(<span class="number">0LL</span>, z);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            a[i] = -a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> [h, j, p] = <span class="built_in">MaxArray</span>&lt;i64&gt; (a);</span><br><span class="line"></span><br><span class="line">        i64 kp = <span class="built_in">max</span>(<span class="number">0LL</span>, p);</span><br><span class="line">        kp = -kp;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; tp - kp + <span class="number">1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = kp; i &lt;= tp; i++) &#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;i64&gt; <span class="title">l</span><span class="params">(<span class="number">1</span>)</span>, <span class="title">r</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; pos; i++) &#123;</span><br><span class="line">        l.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = pos + <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        r.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> [x, y, z] = <span class="built_in">MaxArray</span>(l);</span><br><span class="line">    z = <span class="built_in">max</span>(<span class="number">0LL</span>, z);</span><br><span class="line">    i64 lmax = z;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= l.<span class="built_in">size</span>() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        l[i] = -l[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> [p, u, b] = <span class="built_in">MaxArray</span>(l);</span><br><span class="line">    b = <span class="built_in">max</span>(<span class="number">0LL</span>, b);</span><br><span class="line">    i64 lmin = -b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> [gg, ee, f] = <span class="built_in">MaxArray</span>(r);</span><br><span class="line">    f = <span class="built_in">max</span>(<span class="number">0LL</span>, f);</span><br><span class="line">    i64 rmax = f;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= r.<span class="built_in">size</span>() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        r[i] = -r[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> [ioi, powp, w] = <span class="built_in">MaxArray</span>(r);</span><br><span class="line">    w = <span class="built_in">max</span>(w, <span class="number">0LL</span>);</span><br><span class="line">    i64 rmin = -w;</span><br><span class="line"></span><br><span class="line">    set&lt;i64&gt; is;</span><br><span class="line">    <span class="keyword">for</span> (i64 i = <span class="built_in">min</span>(rmin, lmin); i &lt;= <span class="number">0</span>; i++) &#123;</span><br><span class="line">        is.<span class="built_in">insert</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="built_in">max</span>(lmax, rmax); i++) &#123;</span><br><span class="line">        is.<span class="built_in">insert</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    i64 sum = <span class="number">0</span>;</span><br><span class="line">    i64 mp = <span class="number">0</span>;</span><br><span class="line">    i64 mi = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = pos + <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        sum += a[i];</span><br><span class="line">        mp = <span class="built_in">max</span>(<span class="number">0LL</span>, <span class="built_in">max</span>(mp, sum));</span><br><span class="line">        mi = <span class="built_in">min</span>(<span class="number">0LL</span>, <span class="built_in">min</span>(mi, sum));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    i64 mmp = <span class="number">0</span>, mmi = <span class="number">0</span>;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i64 i = pos - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        sum += a[i];</span><br><span class="line">        mmp = <span class="built_in">max</span>(<span class="number">0LL</span>, <span class="built_in">max</span>(mmp, sum));</span><br><span class="line">        mmi = <span class="built_in">min</span>(<span class="number">0LL</span>, <span class="built_in">min</span>(mmi, sum));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    i64 tminp = mmi + mi;</span><br><span class="line">    i64 tmaxp = mmp + mp;</span><br><span class="line">    <span class="comment">//cerr &lt;&lt; tminp &lt;&lt; &#x27; &#x27; &lt;&lt; tmaxp &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i64 i = a[pos] + tminp; i &lt;= a[pos] + tmaxp; i++) &#123;</span><br><span class="line">        is.<span class="built_in">insert</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; is.<span class="built_in">size</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> x : is) &#123;</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">constexpr</span> i64 inf = <span class="number">1e18</span> + <span class="number">9</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    i64 l, r, g;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r &gt;&gt; g;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (g &gt; r) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    i64 de = (l / g) + ((l % g) ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    i64 kp = (r / g);</span><br><span class="line">   <span class="comment">// cerr &lt;&lt; &quot;!:&quot; &lt;&lt; de &lt;&lt; &#x27; &#x27; &lt;&lt; kp &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">    <span class="keyword">if</span> (g == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (l == <span class="number">1</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">1LL</span> * r &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i64 maxp = <span class="number">0</span>;</span><br><span class="line">        i64 ll = l, rr = r;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i64 i = l; i &lt;= r; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (r - i &lt;= maxp) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span> (i64 j = r; j &gt;= l; j--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j - i &lt;= maxp) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">gcd</span>(i, j) == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (j - i &gt; maxp) &#123;</span><br><span class="line">                        maxp = j - i, ll = i, rr = j;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; <span class="number">1LL</span> * ll &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">1LL</span> * rr &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (de &gt; kp) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (de == kp) &#123;</span><br><span class="line">        <span class="keyword">if</span> (de == <span class="number">1</span>) &#123;</span><br><span class="line">            cout &lt;&lt; g &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; g &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (de == <span class="number">1</span>) &#123;</span><br><span class="line">            cout &lt;&lt; g &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">1LL</span> * g * kp &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i64 ll = de, rr = kp;</span><br><span class="line">        i64 maxp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i64 li = de; li &lt;= kp; li++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (kp - li &lt;= maxp) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">for</span> (i64 j = kp; j &gt;= li; j--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j - li &lt;= maxp) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">gcd</span>(j, li) == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (j - li &gt; maxp) &#123;</span><br><span class="line">                        maxp = j - li;</span><br><span class="line">                        rr = j, ll = li;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ll * <span class="number">1LL</span> * g &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; rr * <span class="number">1LL</span> * g &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> codeforce题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP / UDP</title>
      <link href="/2024/12/26/hehehe/"/>
      <url>/2024/12/26/hehehe/</url>
      
        <content type="html"><![CDATA[<ul><li>OSI七层网络模型</li></ul><p>从下往上 ： 物理层， 数据链路层，网络层，运输层， 会话层，表示层，应用层</p><ul><li>TCP/ IP</li></ul><h3 id="网络协议是什么"><a href="#网络协议是什么" class="headerlink" title="网络协议是什么"></a><a href="https://so.csdn.net/so/search?q=%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE&amp;spm=1001.2101.3001.7020">网络协议</a>是什么</h3><ul><li>在计算机网络要做到井井有条的交换数据，就必须遵守一些事先约定好的规则，比如交换数据的格式、是否需要发送一个应答信息。这些规则被称为网络协议。</li></ul><h3 id="为什么要对网络协议分层"><a href="#为什么要对网络协议分层" class="headerlink" title="为什么要对网络协议分层"></a>为什么要对网络协议分层</h3><ul><li>简化问题难度和复杂度。由于各层之间独立，我们可以分割大问题为小问题。</li><li>灵活性好。当其中一层的技术变化时，只要层间接口关系保持不变，其他层不受影响。</li><li>易于实现和维护。</li><li>促进标准化工作。分开后，每层功能可以相对简单地被描述![[OSI.png]]</li></ul><p><strong>1、UDP 和 TCP 的特点与区别</strong></p><p><strong>用户数据报协议 UDP（User Datagram Protocol）</strong></p><p>是无连接的，尽最大可能交付，没有拥塞控制，面向报文（对于应用程序传下来的报文不合并也不拆分，只是添加 UDP 首部），支持一对一、一对多、多对一和多对多的交互通信。</p><p><strong>传输控制协议 TCP（Transmission Control Protocol）</strong></p><p>是面向连接的，提供可靠交付，有流量控制，拥塞控制，提供全双工通信，面向字节流（把应用层传下来的报文看成字节流，把字节流组织成大小不等的数据块），每一条 TCP 连接只能是点对点的（一对一）。</p><p><strong>TCP拥塞控制</strong>是<a href="https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE" title="传输控制协议">传输控制协议</a>（英语：Transmission Control Protocol，缩写TCP）避免网络拥塞的算法，是<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91" title="互联网">互联网</a>上主要的一个<a href="https://zh.wikipedia.org/wiki/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6" title="拥塞控制">拥塞控制</a>措施。它使用一套基于<a href="https://zh.wikipedia.org/wiki/%E5%92%8C%E6%80%A7%E5%A2%9E%E9%95%BF/%E4%B9%98%E6%80%A7%E9%99%8D%E4%BD%8E" title="和性增长/乘性降低">线增积减模式</a>的多样化网络拥塞控制方法（包括慢启动和拥塞窗口等模式）来控制拥塞。<a href="https://zh.wikipedia.org/zh-cn/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6#cite_note-1">[1]</a><a href="https://zh.wikipedia.org/zh-cn/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6#cite_note-2">[2]</a><a href="https://zh.wikipedia.org/zh-cn/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6#cite_note-3">[3]</a><a href="https://zh.wikipedia.org/zh-cn/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6#cite_note-4">[4]</a><a href="https://zh.wikipedia.org/zh-cn/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6#cite_note-5">[5]</a>在互联网上应用中有相当多的具体实现算法。</p><p>![[{3B980C8E-4290-4775-9A0E-701F2F915A2F}.png]]![[{C2356D64-8E5C-4E3A-A3A8-E8D6517C3212}.png]]</p><p>TCP结构：<br>序号 :</p><p>确认号： </p><p>数据偏移：</p><p><strong>控制位：</strong>八位从左到右分别是 CWR，ECE，URG，ACK，PSH，RST，SYN，FIN。</p><p><strong>CWR：</strong>CWR 标志与后面的 ECE 标志都用于 IP 首部的 ECN 字段，ECE 标志为 1 时，则通知对方已将拥塞窗口缩小；</p><p><strong>ECE：</strong>若其值为 1 则会通知对方，从对方到这边的网络有阻塞。在收到数据包的 IP 首部中 ECN 为 1 时将 TCP 首部中的 ECE 设为 1；</p><p><strong>URG：</strong>该位设为 1，表示包中有需要紧急处理的数据，对于需要紧急处理的数据，与后面的紧急指针有关；</p><p><strong>ACK：</strong>该位设为 1，确认应答的字段有效，TCP规定除了最初建立连接时的 SYN 包之外该位必须设为 1；</p><p><strong>PSH：</strong>该位设为 1，表示需要将收到的数据立刻传给上层应用协议，若设为 0，则先将数据进行缓存；</p><p><strong>RST：</strong>该位设为 1，表示 TCP 连接出现异常必须强制断开连接；</p><p><strong>SYN：</strong>用于建立连接，该位设为 1，表示希望建立连接，并在其序列号的字段进行序列号初值设定；</p><p><strong>FIN：</strong>该位设为 1，表示今后不再有数据发送，希望断开连接。当通信结束希望断开连接时，通信双方的主机之间就可以相互交换 FIN 位置为 1 的 TCP 段。</p><p>每个主机又对对方的 FIN 包进行确认应答之后可以断开连接。不过，主机收到 FIN 设置为 1 的 TCP 段之后不必马上回复一个 FIN 包，而是可以等到缓冲区中的所有数据都因为已成功发送而被自动删除之后再发 FIN 包；</p><p><strong>窗口：</strong>窗口值作为接收方让发送方设置其发送窗口的依据。之所以要有这个限制，是因为接收方的数据缓存空间是有限的。</p><h2 id="TCP三次握手"><a href="#TCP三次握手" class="headerlink" title="TCP三次握手"></a>TCP三次握手</h2><ul><li><p>第一次 从发送方主机  -&gt; 接收方主机<br>ACK = 0, SYN = 1; 选择一个序列号 Seq = x</p></li><li><p>第二次 从接收方主机 -&gt; 发送方主机<br>ACK = 1, SYN = 1; 返回Seq = x + 1同时选择一个序列号 ACKnum = y</p></li><li><p>第三次， 从发送方主机 -&gt; 接受方主机<br>ACK = 1; ACKnum = y + 1</p></li></ul><p>建立连接</p><blockquote><p>使用TCP三次握手的原因</p><ul><li>确认双方的发送和接收消息的能力是正常的</li></ul></blockquote><p>注意到建立连接一般是 三次握手 </p><h2 id="TCP的四次挥手"><a href="#TCP的四次挥手" class="headerlink" title="TCP的四次挥手"></a>TCP的四次挥手</h2><ul><li><p>第一次 从发送方 -&gt; 接送方主机<br>FIN = 1， Seq = x</p></li><li><p>第二次 从接收方 -&gt; 发送方<br>ACK = 1， ACKnum = x + 1;</p></li></ul><hr><pre><code>中间有一段服务端确认（CLOSEWAIT）， 等待 服务端 所有 传输剩下的报文段发送完毕 </code></pre><ul><li><p>第三次 从接收方 -&gt; 发送方<br>FIN = 1， Seq = y</p></li><li><p>第四次 从发送方 -&gt; 接收方</p></li></ul><hr><pre><code>之后是客户端的TIME_WAIT， 等待 2 MSL （报文段最大存活时间）后关闭连接</code></pre><h2 id="TCP-短连接和长连接的区别"><a href="#TCP-短连接和长连接的区别" class="headerlink" title="TCP 短连接和长连接的区别"></a><strong>TCP 短连接和长连接的区别</strong></h2><p><strong>短连接：</strong>Client 向 Server 发送消息，Server 回应 Client，然后一次读写就完成了，这时候双方任何一个都可以发起 close 操作，不过一般都是 Client 先发起 close 操作。短连接一般只会在 Client/Server 间传递一次读写操作。</p><p>短连接的优点：管理起来比较简单，建立存在的连接都是有用的连接，不需要额外的控制手段。</p><p><strong>长连接：</strong>Client 与 Server 完成一次读写之后，它们之间的连接并不会主动关闭，后续的读写操作会继续使用这个连接。</p><p>在长连接的应用场景下，Client 端一般不会主动关闭它们之间的连接，Client 与 Server 之间的连接如果一直不关闭的话，随着客户端连接越来越多，Server 压力也越来越大，这时候 Server 端需要采取一些策略，如关闭一些长时间没有读写事件发生的连接，这样可以避免一些恶意连接导致 Server 端服务受损；如果条件再允许可以以客户端为颗粒度，限制每个客户端的最大长连接数，从而避免某个客户端连累后端的服务。</p><h3 id="粘包和拆包"><a href="#粘包和拆包" class="headerlink" title="粘包和拆包"></a>粘包和拆包</h3><ul><li>粘包 ： 在从 客户端 到 服务端过程中两个包连在一起 叫做粘包</li><li>拆包 ： ————————————————————————-之后还拆分成两个与原来不同的数据段叫做拆包</li></ul><blockquote><p>什么时候发生粘包和拆包？<br>    答案 : </p><pre><code>1. 在发送的数据超过TCP缓冲区最大空间时候可能发生拆包2. 发送的数据大于MSS（最大报文长度）， 发生拆包3. 发送的数据小于TCP缓冲区最小空间可能发生粘包4. 接受数据端应用层没有及时读取缓冲区的数据</code></pre></blockquote><p>粘包拆包解决办法 : </p><ul><li><strong>消息定长</strong> ： 每个数据包固定长度（不够的拿0去填补），这样接收端每次接受的都是固定长度的数据，就可以分开</li><li><strong>设置消息边界</strong> ： 服务端在接受时候， 按照分割边界把消息分割， 如 FTP协议（通过设置一个换行符）</li></ul><h3 id="TCP的可靠传输"><a href="#TCP的可靠传输" class="headerlink" title="TCP的可靠传输"></a>TCP的可靠传输</h3><blockquote><p>TCP采用超时重传实现可靠传输 ： 当某一个信息发送后在超时时间内没有收到确认就重传这个报文段（从发送到接受的时间是RTT， 可以自己计算）</p></blockquote><h3 id="TCP滑动窗口"><a href="#TCP滑动窗口" class="headerlink" title="TCP滑动窗口"></a>TCP滑动窗口</h3><blockquote><p>TCP发送窗口， 和接受窗口内的数据段都是可接受或者可以发送的，当发送方的某个报文段已经被确认后， 窗口会向右移动一段距离， 更新可以接受和被接受的报文段</p></blockquote><h3 id="TCP的流量控制"><a href="#TCP的流量控制" class="headerlink" title="TCP的流量控制"></a>TCP的流量控制</h3><blockquote><p>TCP通过控制窗口大小实现流量的控制<br>为了避免发送不出数据， 接收方会时不时发送一个 <strong>窗口探测</strong> 的数据段（只包含一个字节）来确定最新的窗口大小</p></blockquote><h2 id="TCP的拥塞控制"><a href="#TCP的拥塞控制" class="headerlink" title="TCP的拥塞控制"></a>TCP的拥塞控制</h2><blockquote><p><strong>主要通过四个算法</strong>：慢开始，拥塞避免，快重传，快恢复</p></blockquote><p>维护一个拥塞窗口（cwnd），注意道拥塞窗口只是一个状态变量</p><p>假设接收方有足够大的接收窗口，窗口的大小为报文段</p><ul><li><p>慢开始和拥塞避免</p><pre><code> 最开始执行满开始，让cwnd = 1，之后每当接受确认，就倍增 2 4 8 ....再设置一个慢开始门限ssthresh，当慢开始大于这个门限的时候进入拥塞避免，每个轮次让cwnd + 1 1    如果出现了超时，就另慢开始门限 = cwnd / 2，重新开始慢开始</code></pre></li><li><p>快重传和快恢复</p><pre><code>  接收方每次接收报文都应该对最后一次收到的报文进行确认，例如收到了B1， B2， B4  则在收到B2时候要对B1确认，B4时候要对B2确认  当发送方重复收到3次接收方发来的某个相同的报文的确认时，立即执行快重传（因为这时候知道有报文丢失），在这种情况下是报文段的丢失，不是网络拥塞，所以直接执行快恢复，让慢开始上限（ssthresh）= 拥塞窗口（cwnd） / 2；注意此时直接进入拥塞避免</code></pre></li></ul><blockquote><p>注意 慢开始和快恢复的慢和快指的是cwnd的设定值，慢开始cwnd设置成1，快开始cwnd设置成ssthresh</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>comment</title>
      <link href="/comment/index.html"/>
      <url>/comment/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>文章分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<hr><h3 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h3><ul><li>中国海洋大学本科生一枚。</li><li>本站诞生与某天心血来潮，用来分享学习中遇到的问题和算法题解总结。</li><li>请各路朋友多多指教 ！</li></ul><hr><h3 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h3><ul><li>微信 : a511017802</li><li>邮件 : 511017802@qq.com</li><li>博客 ：Tansuozhe1num.github.io</li></ul><hr>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>shuoshuo</title>
      <link href="/shuoshuo/index.html"/>
      <url>/shuoshuo/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
